---
- hosts: all

  tasks:
    - name: Create OpenShift Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ namespace_name }}"

    - name: Create an Openshift Virtualization virtual machine
      redhat.openshift_virtualization.kubevirt_vm:
        state: present
        namespace: "{{ namespace_name }}"
        name: "{{ virt_machine_name }}"
        instancetype:
          name: u1.medium
        preference:
          name: fedora
        spec:
          template:
            metadata:
              labels:
                vm.kubevirt.io/name: "{{ virt_machine_name }}"
          domain:
            devices:
              disks:
                - disk:
                    bus: virtio
                  name: rootdisk
                - disk:
                    bus: virtio
                  name: cloudinitdisk
              interfaces:
                - masquerade: {}
                  model: virtio
                  name: default
              networkInterfaceMultiqueue: true
              rng: {}
          networks:
            - name: default
              pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
            - name: rootdisk
              containerDisk:
                image: quay.io/containerdisks/fedora
            - cloudInitNoCloud:
                userData: |
                  #cloud-config
                  chpasswd:
                    expire: false
                  password: {{ ssh_vm_password }}
                  user: {{ ssh_vm_username }}
                  ssh_authorized_keys:
                    - {{ ssh_vm_pubkey }}
              name: cloudinitdisk

    - name: Wait for the VM to be running
      redhat.openshift_virtualization.kubevirt_vm_info:
        namespace: "{{ namespace_name }}"
        name: "{{ virt_machine_name }}"
        wait: true

    - name: Create a service in OCP to expose port 80 for the virt machine just created
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ virt_machine_name }}"
            namespace: "{{ namespace_name }}"
          spec:
            selector:
              vm.kubevirt.io/name: "{{ virt_machine_name }}"
            type: ClusterIP
            ports:
              - name: http
                port: 80
                targetPort: "{{ app_source_port }}"
                protocol: TCP

    - name: Create a route in OCP to expose the service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: "{{ virt_machine_name }}"
            namespace: "{{ namespace_name }}"
          spec:
            to:
              kind: Service
              name: "{{ virt_machine_name }}"
            port:
              targetPort: http
            wildcardPolicy: None